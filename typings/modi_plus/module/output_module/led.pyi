"""
This type stub file was generated by pyright.
"""

from typing import Tuple
from modi_plus.module.module import OutputModule

"""Led module."""
class Led(OutputModule):
    PROPERTY_LED_STATE = ...
    PROPERTY_LED_SET_RGB = ...
    PROPERTY_OFFSET_RED = ...
    PROPERTY_OFFSET_GREEN = ...
    PROPERTY_OFFSET_BLUE = ...
    @property
    def rgb(self) -> Tuple[int, int, int]:
        ...
    
    @rgb.setter
    def rgb(self, color: Tuple[int, int, int]) -> None:
        """Sets the color of the LED light with given RGB values, and returns
        the current RGB values.

        :param color: RGB value to set
        :type color: Tuple[int, int, int]
        :return: None
        """
        ...
    
    @property
    def red(self) -> int:
        """Returns the current value of the red component of the LED

        :return: Red component
        :rtype: int
        """
        ...
    
    @red.setter
    def red(self, red: int) -> None:
        """Sets the red component of the LED light by given value

        :param red: Red component to set
        :type red: int
        :return: None
        """
        ...
    
    @property
    def green(self) -> int:
        """Returns the current value of the green component of the LED

        :return: Green component
        :rtype: int
        """
        ...
    
    @green.setter
    def green(self, green: int) -> None:
        """Sets the green component of the LED light by given value

        :param green: Green component to set
        :type green: int
        :return: None
        """
        ...
    
    @property
    def blue(self) -> int:
        """Returns the current value of the blue component of the LED

        :return: Blue component
        :rtype: int
        """
        ...
    
    @blue.setter
    def blue(self, blue: int) -> None:
        """Sets the blue component of the LED light by given value

        :param blue: Blue component to set
        :type blue: int
        :return: None
        """
        ...
    
    def set_rgb(self, red: int, green: int, blue: int) -> None:
        """Sets the color of the LED light with given RGB values, and returns
        the current RGB values.

        :param red: Red component to set
        :type red: int
        :param green: Green component to set
        :type green: int
        :param blue: Blue component to set
        :type blue: int
        :return: None
        """
        ...
    
    def turn_on(self) -> None:
        """Turn on led at maximum brightness.

        :return: RGB value of the LED set to maximum brightness
        :rtype: None
        """
        ...
    
    def turn_off(self) -> None:
        """Turn off led.

        :return: None
        """
        ...
    


