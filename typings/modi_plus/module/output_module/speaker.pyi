"""
This type stub file was generated by pyright.
"""

from typing import List, Tuple, Union
from modi_plus.module.module import OutputModule

"""Speaker module."""
class Speaker(OutputModule):
    STATE_STOP = ...
    STATE_START = ...
    STATE_PAUSE = ...
    STATE_RESUME = ...
    PROPERTY_SPEAKER_STATE = ...
    PROPERTY_SPEAKER_SET_TUNE = ...
    PROPERTY_SPEAKER_RESET = ...
    PROPERTY_SPEAKER_MUSIC = ...
    PROPERTY_SPEAKER_MELODY = ...
    PROPERTY_OFFSET_CURRENT_VOLUME = ...
    PROPERTY_OFFSET_CURRENT_FREQUENCY = ...
    SCALE_TABLE = ...
    PRESET_MUSIC = ...
    @staticmethod
    def preset_notes() -> List[str]:
        ...
    
    @staticmethod
    def preset_musics() -> List[str]:
        ...
    
    @property
    def tune(self) -> Tuple[int, int]:
        ...
    
    @tune.setter
    def tune(self, tune_value: Tuple[Union[int, str], int]) -> None:
        """Set tune for the speaker

        :param tune_value: Value of frequency and volume
        :type tune_value: Tuple[Union[int, str], int]
        :return: None
        """
        ...
    
    @property
    def frequency(self) -> int:
        """Returns Current frequency

        :return: Frequency value
        :rtype: int
        """
        ...
    
    @frequency.setter
    def frequency(self, frequency_value: int) -> None:
        """Set the frequency for the speaker

        :param frequency_value: Frequency to set
        :type frequency_value: int
        :return: None
        """
        ...
    
    @property
    def volume(self) -> int:
        """Returns Current volume

        :return: Volume value
        :rtype: int
        """
        ...
    
    @volume.setter
    def volume(self, volume_value: int) -> None:
        """Set the volume for the speaker

        :param volume_value: Volume to set
        :type volume_value: int
        :return: None
        """
        ...
    
    def set_tune(self, frequency: Union[int, str], volume: int) -> None:
        """Set tune for the speaker

        :param frequency: Frequency value
        :type frequency: int
        :param volume: Volume value
        :type volume: int
        :return: None
        """
        ...
    
    def play_music(self, name: str, volume: int) -> None:
        """Play music in speaker module

        :param name: Music name for playing
        :type name: str
        :param volume: Volume of speaker
        :type volume: int
        :return: None
        """
        ...
    
    def stop_music(self) -> None:
        """Stop music in speaker module

        :return: None
        """
        ...
    
    def pause_music(self) -> None:
        """Pause music in speaker module

        :return: None
        """
        ...
    
    def resume_music(self) -> None:
        """Resume music in speaker module

        :return: None
        """
        ...
    
    def reset(self) -> None:
        """Turn off the sound

        :return: None
        """
        ...
    


