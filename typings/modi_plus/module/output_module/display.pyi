"""
This type stub file was generated by pyright.
"""

from typing import List
from modi_plus.module.module import OutputModule

"""Display module."""
class Display(OutputModule):
    WIDTH = ...
    HEIGHT = ...
    TEXT_SPLIT_LEN = ...
    DOT_SPLIT_LEN = ...
    DOT_LEN = ...
    PROPERTY_DISPLAY_WRITE_TEXT = ...
    PROPERTY_DISPLAY_DRAW_DOT = ...
    PROPERTY_DISPLAY_DRAW_PICTURE = ...
    PROPERTY_DISPLAY_RESET = ...
    PROPERTY_DISPLAY_WRITE_VARIABLE = ...
    PROPERTY_DISPLAY_SET_OFFSET = ...
    PROPERTY_DISPLAY_MOVE_SCREEN = ...
    PRESET_PICTURE = ...
    @staticmethod
    def preset_pictures() -> List[str]:
        ...
    
    def __init__(self, id_, uuid, connection_task) -> None:
        ...
    
    @property
    def text(self) -> str:
        ...
    
    @text.setter
    def text(self, text: str) -> None:
        ...
    
    def write_text(self, text: str) -> None:
        """Show the input string on the display.

        :param text: Text to display.
        :type text: str
        :return: None
        """
        ...
    
    def write_variable_xy(self, x: int, y: int, variable: float) -> None:
        """Show the input variable on the display.

        :param x: X coordinate of the desired position
        :type x: int
        :param y: Y coordinate of te desired position
        :type y: int
        :param variable: Variable to display.
        :type variable: float
        :return: None
        """
        ...
    
    def write_variable_line(self, line: int, variable: float) -> None:
        """Show the input variable on the display.

        :param line: display line number of the desired position
        :type line: int
        :param variable: Variable to display.
        :type variable: float
        :return: None
        """
        ...
    
    def draw_picture(self, name: int) -> None:
        """Clears the display and show the input picture on the display.

        :param x: X coordinate of the desired position
        :type x: int
        :param y: Y coordinate of te desired position
        :type y: int
        :param name: Picture name to display.
        :type name: float
        :return: None
        """
        ...
    
    def draw_dot(self, dot: bytes) -> None:
        """Clears the display and show the input dot on the display.

        :param dot: Dot to display
        :type dot: bytes
        :return: None
        """
        ...
    
    def set_offset(self, x: int, y: int) -> None:
        """Set origin point on the screen

        :param x: X-axis offset on screen
        :type x: int
        :param y: Y-axis offset on screen
        :type y: int
        :return: None
        """
        ...
    
    def reset(self, mode=...) -> None:
        """Clear the screen.

        :param mode: Erase mode
            - mode 0 : Erase inside buffer(it looks like nothing has changed)
            - mode 1 : Erase display
        :return: None
        """
        ...
    


